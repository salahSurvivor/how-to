const express = require('express');
const mongoose = require('mongoose');
const Product = require('./models/productModels');
const app = express();

const data = {
    name: 'shoes',
    quantity: 22,
    price: 250
}

//routes
app.get('/', (req, res) => {
    res.send(`this is the  : ${req.url}`);
})

//Create Product
app.post('/products', async(req, res) => {
    try {
        await Product.create(data);
        res.status(200).json('The Product Has Been Added!!');
        
    } catch (error) {
        console.log(error.message);
        res.status(500).json({message: error.message})
    }
});

//Read Product
app.get('/product', async(req, res) => {
    try{
        const product = await Product.find({});
        res.status(200).json(product);
    }
    catch(err){
        res.status(500).json({message: err.message})
    }
})

//Find Product
app.get('/product/:id', async(req, res) => {
    try{
        const {id} = req.params;
        const product = await Product.find({_id: id});
        res.status(200).json(product);
    }
    catch(err){
        res.status(500).json({message: err.message});
    }   
})

//Update Product
app.put('/product/:id', async(req, res) => {
    try{
        const {id} = req.params;
        const product = await Product.findByIdAndUpdate(id, data);

        if(!product)
            res.status(404).json({message: `Cannot Find Product with id ${id}`})

        const productFind = await Product.findById(id);  
        res.status(200).json(productFind)
    }
    catch(err){
        console.log(err.message);
        res.status(500).json(err.message);
    }   
})

//Delete Product
app.delete('/product/:id', async(req, res) => {
    try {
        const {id} = req.params;
        const product = await Product.findByIdAndRemove(id);
        //if product don't exist this message will apear
        if(!product)
            res.status(404).json({message: `Cannot Find Product With id ${id}`});

        res.status(200).json('The Product Has Been Deleted!!');
    }
    catch(err){
        console.log(err.message);
        res.status(500).json(err.message);    
    }
});

//start server
app.listen(3000, () => {
    console.log('Nodejs Api Is Running On Port 3000');
})

mongoose.set("strictQuery", false);
mongoose.connect('mongodb+srv://root:9nKmIA7ozMRyfSgW@mangodb.cllrloz.mongodb.net/categories?retryWrites=true&w=majority')
.then(() => {
    console.log('Conected To MongoDb')
})
.catch((err) => {
    console.log(err)
})